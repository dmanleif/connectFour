/* autogenerated by Processing revision 1292 on 2023-06-26 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Connect_Four extends PApplet {

int bs = 100;
Game game = new Game();
int playerMove;
PFont f;

public void setup() {
    /* size commented out by preprocessor */;
    ellipseMode(CORNER); 
    f = createFont("Arial",16,true);
    
}

public void mousePressed() {
    int col = mouseX / bs;
    game.playRound(col);
    
}

public void mouseReleased() {
    game.playRound(0);
}

public void draw() {
    
    background(196);
    
    for (int row = 0; row < Constants.NUMROWS; ++row) {
        for (int col = 0; col < Constants.NUMCOLS; ++col) {
            fill(255);
            rect(col*bs, row*bs, bs, bs);
            if (game.board.getPiece(row, col) > 0) {
                if (game.board.getPiece(row, col) == 1) fill(0xFF007FFF);
                if (game.board.getPiece(row, col) == 2) fill(0xFFDC143C);
                ellipse(col*bs, row*bs, bs, bs);
            }
        }
    }
    stroke(175);
    textAlign(CENTER);
    textFont(f, 32);
    if (game.gameOver && game.playerIndex == 1) {
        text("Player Wins", 350, 650);
    }
    else if (game.gameOver && game.playerIndex == 0) {
        text("Computer Wins", 350, 650);
    }
    else if (game.playerIndex == 0) {

        text("Click Column To Place Piece", 350, 650);
    }
    else {
        text("Computer Making Move...", 350, 650);
    }

    
}


  public void settings() { size(700, 700); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Connect_Four" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
